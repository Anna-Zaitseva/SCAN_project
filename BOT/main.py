import telebot
from constants import list_error, list_error2, string_error, TOKEN
from db import *
from logika import examination, lowercase_text
from zapros import get_zapros, category

bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])  #<-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
def start(message):
    text = f'''{message.from_user.first_name}, –Ω–∞—à –ë–û–¢ ü§ñ –º–æ–∂–µ—Ç
    –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ –ø—Ä–µ–¥–ª–æ–≥–∞—Ç—å –≤–∞–º —Ç–µ–º—É –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞!'''
    bot.send_message(message.chat.id, text, parse_mode='HTML')


@bot.message_handler(content_types=['text'])
def text(message):     #<-- –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –∑–∞–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    text1 = lowercase_text(message.text)  #<--–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–µ–ª–∞—è —Å–ø–∏—Å–æ–∫ –∏–∑ –º–∞–ª–µ–Ω—å–∫–∏—Ö —Å–ª–æ–≤ –∏ —É–±–∏—Ä–∞–µ–º –Ω–µ –Ω—É–∂–Ω—ã–µ —Å–ª–æ–≤–∞
    text2 = examination(text1)  #<-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –≤—ã—è–≤–ª—è–µ–º —Ç–µ–º—É –ø–æ –∫–æ—Ç–æ—Ä–æ–π –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –∏ –ø–æ–ª—É—á–∞–µ–º –∫–æ—Ä—Ç–µ–∂

    if text2 in list_error:  #<-- –õ–æ–≥–∏–∫–∞ –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω
        create_user(message.from_user.id, message.from_user.first_name)  #<--–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É
        create_pending_requests(message.from_user.id, text1)  #<-- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        bot.send_message(message.chat.id, text2, parse_mode='HTML')  #<--–í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á—Ç–æ –∑–∞–ø—Ä–æ—Å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω
        pass
    if text1[0] == list_error2[0] and text1[4] == list_error2[4]:  #<-- –£—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        pass

    elif text2[0] == string_error:  #<-- –£—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ—Ç 2 —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω
        pass

    else:       #<-- –õ–æ–≥–∏–∫–∞ –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω
        menu1 = telebot.types.InlineKeyboardMarkup()
        menu1.add(telebot.types.InlineKeyboardButton(text='–î–ê!', callback_data='yes'))
        menu1.add(telebot.types.InlineKeyboardButton(text='–ù–ï–¢', callback_data='no'))
        bot.send_message(message.chat.id, f'–í–æ–∑–º–æ–∂–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ —Ç–µ–º—É: <b>{text2[0]} ?</b>', reply_markup=menu1, parse_mode='HTML')
        answer = similar_request(text1)
        bot.send_message(message.chat.id, f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–æ–±–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: <b>{answer[1]}</b>  \n\n<b>{answer[0]}</b> - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–¥–µ–ª–∞–ª–∏ –ø–æ–¥–æ–±–Ω—ã–π –∑–∞–ø—Ä–æ—Å. ', parse_mode='HTML')
        create_processed_requests(message.from_user.id, message.from_user.first_name, text2[1], text1)  #<-- –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ –∑–∞–ø—Ä–æ—Å–∞  –µ—Å–ª–∏ —Ç–∞–∫–æ–π —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω

        return text1, text2


@bot.callback_query_handler(func=lambda call: True)
def button(call):
    if call.data == 'yes':  #<-- –õ–æ–≥–∏–∫–∞ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º–µ—Ç –∫–Ω–æ–ø–∫—É –î–ê
        zap = category(text(call.message)[1][1])
        novost = get_zapros(zap)
        for i in novost:
            bot.send_message(call.message.chat.id, i)

    if call.data == 'no':  #<-- –õ–æ–≥–∏–∫–∞ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º–µ—Ç –∫–Ω–æ–ø–∫—É –ù–ï–¢
        bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∑–∞–Ω–æ–≤–æ.')


if __name__ == '__main__':
    bot.polling(none_stop=True)
